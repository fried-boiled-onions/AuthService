openapi: 3.0.3
info:
  title: Messenger REST API
  description: API for messenger frontend REST interactions
  version: 3.0.3
servers:
- url: https://virtserver.swaggerhub.com/vniia/MessengerAPI/3.0.3
  description: SwaggerHub API Auto Mocking
security:
- BearerAuth: []
paths:
  /auth/register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "200":
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        "400":
          description: "Неверный запрос, возможно, проблема с данными"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /auth/login:
    post:
      summary: Авторизация пользователя и выдача токенов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: При успешной авторизации пользователь получает access и refresh токены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "400":
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Неверный email или пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /auth/refresh:
    post:
      summary: Обновление access токена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refreshRequest'
        required: true
      responses:
        "200":
          description: Успешное обновление access токена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refreshResponse'
        "401":
          description: Неверный или истекший refresh токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /auth/logout:
    post:
      summary: Инвалидация refresh токена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logoutRequest'
        required: true
      responses:
        "200":
          description: Успешная инвалидация refresh токенов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logoutResponse'
        "401":
          description: Неверный или уже инвалидированный refresh токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /profile/{id}:
    get:
      summary: Получение данных о пользователе
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Успешное получение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        "404":
          description: Профиль не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
    put:
      summary: Обновление данных профиля
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
        required: true
      responses:
        "200":
          description: Успешное обновление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        "400":
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
components:
  schemas:
    ProfileResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        avatarUrl:
          type: string
    ProfileUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        avatarUrl:
          type: string
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    refreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
    refreshResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    logoutRequest:
      type: object
      properties:
        refreshToken:
          type: string
    logoutResponse:
      type: object
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
